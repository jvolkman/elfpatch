[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "elfpatch"
version = "0.1.0"
description = "Patch elf files"
readme = "README.md"
requires-python = ">= 3.8"
license.file = "LICENSE"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
urls.homepage = "https://github.com/jvolkman/elfpatch"

dependencies = [
]

[project.scripts]
elfpatch = "elfpatch.main:main"

[tool.black]
line-length = 127
target-version = ["py311", "py310", "py39", "py38"]
extend-exclude = '''
'''

[tool.ruff]
line-length = 127
select = [
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C9",   # mccabe
  "E",    # pycodestyle
  "F",    # pyflakes
  "PGH",  # pygrep-hooks
  "RUF",  # ruff
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
ignore = [
  "C901", # Function is too complex
]
src = ["src"]
target-version = "py38"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.isort]
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["build"]

[tool.hatch]

[tool.hatch.build.targets.sdist]
exclude = [
  "/.*",
]

[tool.hatch.build.targets.wheel]
packages = ["src/elfpatch"]

[tool.hatch.metadata]
allow-direct-references = true
